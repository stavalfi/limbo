{
  "$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "files": {
    "ignoreUnknown": false
  },
  "formatter": {
    "enabled": true
  },
  "organizeImports": {
    "enabled": false
  },
  "linter": {
    "enabled": true,
    // to migrate from eslint to biome:
    // 1. go to here, find the eslint rule name: https://github.com/biomejs/website/blob/main/src/content/docs/linter/rules-sources.mdx
    // 2. then find the biome rule name and go here: https://biomejs.dev/linter/rules/ to find where to put it in this file
    "rules": {
      "recommended": false,
      "complexity": {
        "noUselessRename": "error",
        "noUselessStringConcat": "error",
        "useLiteralKeys": "off",
        "useFlatMap": "error",
        "noUselessLabel": "error",
        "useDateNow": "error",
        "noUselessEmptyExport": "error",
        "noUselessSwitchCase": "error",
        "noUselessCatch": "error",
        "noUselessTernary": "error"
      },
      "nursery": {
        "noUselessEscapeInRegex": "off",
        "noTemplateCurlyInString": "error",
        "noNestedTernary": "error"
      },
      "correctness": {
        "noUnusedImports": "off", // it has a bug: it omit used import when the file have a syntax error. so I use it only before commit
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "off",
        "noPrecisionLoss": "error",
        "noConstructorReturn": "error",
        "noInvalidUseBeforeDeclaration": "error",
        "useYield": "error",
        "useExhaustiveDependencies": "error"
      },
      "suspicious": {
        "noImplicitAnyLet": "error",
        "noAsyncPromiseExecutor": "error",
        "noDuplicateCase": "error",
        "noConfusingLabels": "error",
        "noSelfCompare": "error",
        "useValidTypeof": "error",
        "noExportsInTest": "error"
      },
      "style": {
        "useForOf": "error",
        "useThrowOnlyError": "error",
        "useDefaultParameterLast": "off", // it doesn't find some cases where eslint rule does
        "useConsistentBuiltinInstantiation": "error",
        "noCommaOperator": "error",
        "noVar": "error",
        "useBlockStatements": "error"
      },
      "security": {
        "noGlobalEval": "error"
      }
    }
  }
}
